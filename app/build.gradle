apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

repositories {
    maven { url "https://jitpack.io" }
    maven { url "https://clojars.org/repo/" }
    maven { url 'https://maven.fabric.io/public' }
    maven { url 'https://dl.bintray.com/drummer-aidan/maven' }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
}

kapt {
    generateStubs = true
}

android {
    compileSdkVersion rootProject.ext.sdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
    }

    defaultConfig {
        applicationId "com.rockspin.bargainbits"
        minSdkVersion 21
        targetSdkVersion rootProject.ext.sdkVersion
        versionCode 29
        versionName "1.4.1"

        // TODO - remove multidex once app refactoring to Kotlin is done and all old libraries are removed
        multiDexEnabled true
    }

    signingConfigs {
        if (project.hasProperty("RELEASE_STORE_FILE")) {
            release {
                storeFile file(RELEASE_STORE_FILE)
                storePassword RELEASE_STORE_PASSWORD
                keyAlias RELEASE_KEY_ALIAS
                keyPassword RELEASE_KEY_PASSWORD
            }
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
        }

        if (project.hasProperty("RELEASE_STORE_FILE")) {
            release {
                minifyEnabled false
                signingConfig signingConfigs.release
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            }
        }
    }

    flavorDimensions "env"

    productFlavors {
        development {
            dimension "env"
            applicationId "com.rockspin.bargainbits"
        }

        production {
            dimension "env"
            applicationId "com.rockspin.bargainbits"
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/rxjava.properties'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    dataBinding {
        enabled = true
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    lintOptions {
        lintConfig rootProject.file('gradle/lint.xml')
        // Disable RestrictedApi reports until the Room dependency works better with Kotlin
        disable "RestrictedApi"
    }
}

dependencies {
    kapt "com.android.databinding:compiler:$gradle_plugin_version"

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation "io.reactivex.rxjava2:rxkotlin:2.1.0"
    implementation 'com.jakewharton.rxbinding2:rxbinding-kotlin:2.0.0'
    implementation 'com.jakewharton.rxbinding2:rxbinding-support-v4-kotlin:2.0.0'
    implementation 'com.jakewharton.rxbinding2:rxbinding-appcompat-v7-kotlin:2.0.0'

    // Android architecture components
    implementation "android.arch.lifecycle:extensions:1.0.0"
    implementation "android.arch.persistence.room:runtime:1.0.0"
    implementation "android.arch.persistence.room:rxjava2:1.0.0"
    kapt "android.arch.persistence.room:compiler:1.0.0"

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.2.0'
    implementation "com.squareup.retrofit2:converter-gson:2.2.0"
    implementation "com.squareup.retrofit2:adapter-rxjava2:2.2.0"
    implementation 'com.squareup.okhttp3:okhttp:3.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.0'

    implementation 'com.squareup.okhttp:okhttp:2.4.0'
    implementation 'com.squareup.retrofit:retrofit:1.9.0'

    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

    implementation 'nz.bradcampbell:paperparcel:2.0.1'
    implementation 'nz.bradcampbell:paperparcel-kotlin:2.0.1'
    kapt 'nz.bradcampbell:paperparcel-compiler:2.0.1'

    // RX
    implementation 'io.reactivex:rxjava:1.1.0'

    //RX Android
    implementation 'io.reactivex:rxandroid:1.0.1'

    // RX Binding
    implementation 'com.jakewharton.rxbinding:rxbinding:0.3.0'
    implementation 'com.jakewharton.rxbinding:rxbinding-support-v4:0.3.0'
    implementation 'com.jakewharton.rxbinding:rxbinding-appcompat-v7:0.3.0'
    implementation 'com.jakewharton.rxbinding:rxbinding-recyclerview-v7:0.3.0'
    implementation 'com.jakewharton.rxbinding:rxbinding-design:0.3.0'

    // view injection
    implementation 'com.jakewharton:butterknife:8.8.1'
    kapt 'com.jakewharton:butterknife-compiler:8.8.1'

    // Design Library
    implementation "com.android.support:design:$supportLibVersion"

    // Percent Support Library
    implementation "com.android.support:percent:$supportLibVersion"

    // App compat
    implementation "com.android.support:appcompat-v7:$supportLibVersion"

    // Chrome tabs
    implementation "com.android.support:customtabs:$supportLibVersion"

    // card view // card view
    implementation "com.android.support:cardview-v7:$supportLibVersion"

    //Gson
    implementation 'com.google.code.gson:gson:2.8.0'

    // Glide for image loading
    implementation 'com.github.bumptech.glide:glide:3.7.0'

    // App rating helper
    implementation 'com.github.codechimp-org.apprater:library:1.0.22'

    // Evernote Job Scheduler
    implementation 'com.evernote:android-job:1.0.2'

    //CrashLytics
    implementation('com.crashlytics.sdk.android:crashlytics:2.5.5@aar') {
        transitive = true;
    }
    // Autofit textview
    implementation 'me.grantland:autofittextview:0.2.1'

    // Material dialogs
    implementation 'com.afollestad.material-dialogs:core:0.9.4.3'

    // Stream API
    implementation 'com.annimon:stream:1.0.9'

    // Reactive network
    implementation 'com.github.pwittchen:reactivenetwork:0.1.5'

    // icepick
    implementation "frankiesardo:icepick:3.1.0"
    kapt "frankiesardo:icepick-processor:3.1.0"

    // timber
    implementation 'com.jakewharton.timber:timber:4.6.0'

    // constraint layout
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'

    implementation 'com.github.frankiesardo:auto-parcel:0.3.1'
    kapt 'com.github.frankiesardo:auto-parcel-processor:0.3.1'

    implementation 'com.fernandocejas:arrow:1.0.0'

    implementation "com.github.akarnokd:rxjava2-interop:0.11.0"

    implementation 'com.jakewharton:disklrucache:2.0.2'
    implementation 'org.apache.commons:commons-lang3:3.4'
    implementation 'commons-io:commons-io:2.4'

    productionImplementation 'com.google.android.gms:play-services-analytics:10.2.4'

    testImplementation 'junit:junit:4.12'
    testImplementation('com.squareup.assertj:assertj-android:1.1.1') {
        exclude module: 'support-com.google.common.annotations'
    }
    testImplementation 'org.assertj:assertj-core:3.6.2'
    testImplementation "com.android.support:support-annotations:$supportLibVersion"
    testImplementation "android.arch.core:core-testing:1.0.0"
    testImplementation "com.nhaarman:mockito-kotlin:1.4.0"
    testImplementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
}